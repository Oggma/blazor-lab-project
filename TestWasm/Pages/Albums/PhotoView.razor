@implements IAsyncDisposable
@inject IJSRuntime JSRuntime

<Thumbnail Source="@PhotoSource.ThumbnailUrl" OnClick="@OnThumnailClickHandler"></Thumbnail>

<div class="ogm-modal" id="photoModal">
    <div class="ogm-modal-content">
        <div class="ogm-photo">
            <img src="@PhotoSource.Url" />
        </div>
    </div>
</div>


@code {
    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/albums/photo-modal.js").AsTask();

    [Parameter]
    public Photo PhotoSource { get; set; }

    protected virtual async Task OnThumnailClickHandler()
    {
        var module = await Module;
        await module.InvokeVoidAsync("open", "photoModal");
    }

    public async ValueTask DisposeAsync()
    {
        if (_module != null)
        {
            var module = await _module;
            await module.DisposeAsync();
        }
    }
}
